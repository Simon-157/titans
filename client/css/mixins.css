@import './root';

@mixin for-mobile-landscape {
  @media (max-width: $mobileLandscapeMaxWidth) {
    @content;
  }
}

@mixin for-tablet-landscape {
  @media (max-width: $tabletLandscapeMaxWidth) {
    @content;
  }
}

@mixin for-desktop-small {
  @media (max-width: $desktopBigMinWidth) {
    @content;
  }
}

@mixin for-desktop-large {
  @media (min-width: $desktopBigMinWidth + 1) {
    @content;
  }
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin lt ($width, $minWidth: false) {
  @if $minWidth {
    @media (min-width: #{$minWidth}px) and (max-width: #{$width}px) {
      @content;
    }
  } @else {
    @media (max-width: #{$width}px) {
      @content;
    }
  }
}

@mixin gt ($width, $maxWidth: false) {
  @if $maxWidth {
    @media (min-width: #{$width}px) and (max-width: #{$maxWidth}px) {
      @content;
    }
  } @else {
    @media (min-width: #{$width}px) {
      @content;
    }
  }
}

@mixin font ($value) {
  $weight: nth($value, 1);
  $size: null;
  $color: null;

  @if length($value) > 1 {
    $size: nth($value, 2);
  }

  @if length($value) > 2 {
    $color: nth($value, 3);
  }

  @if $weight {
    font-weight: $weight;
  }

  @if $size {
    font-size: $size;
  }

  @if $color {
    color: $color;
  }
}

@mixin mid-inline-block {
  display: inline-block;
  vertical-align: middle;
}

@mixin v-inline-block {
  display: inline-block;
  vertical-align: top;
}

@mixin pseudo {
  position: absolute;
  content: "";
}

@mixin absolute-horizontal-centered {
	left: 0;
	right: 0;
	margin: auto;
	position: absolute;
}

@mixin absolute-centered {
	top: 0;
	bottom: 0;
  @include absolute-horizontal-centered;
}

@mixin absolute-full-size {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
}

@mixin hack-chrome-autocomplete {
  label {
    z-index: 1;
  }

  input:-webkit-autofill {
    -webkit-box-shadow: 0 0 0px 1000px white inset;
  }
}

@mixin translateX($num) {
  left: 50%;
  position: relative;
  @include transform(translateX($num));
}
