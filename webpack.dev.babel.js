const crypto = require('crypto');
const { join, resolve } = require('path');
const dayjs = require('dayjs');
const dotenv = require('dotenv');
const Dotenv = require('dotenv-webpack');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const ExtractCssChunks = require('extract-css-chunks-webpack-plugin');
const { cwd, host, port } = require('./server/config');
const webpackModule = require('./webpack.module');

/**
* The MD4 algorithm is not available anymore in Node.js 17+ (because of library SSL 3).
* In that case, silently replace MD4 by the MD5 algorithm.
*/
try {
  crypto.createHash('md4');
} catch (err) {
  const origCreateHash = crypto.createHash;
  crypto.createHash = (alg, opts) => {
    return origCreateHash(alg === 'md4' ? 'md5' : alg, opts);
  };
}

dotenv.config({
  path: resolve(cwd, './settings/.env'),
});
dotenv.config({
  path: resolve(cwd, './settings/.env.development'),
});

const plugins = [
  new Dotenv({
    path: resolve(cwd, './settings/.env'),
  }),
  new Dotenv({
    path: resolve(cwd, './settings/.env.development'),
  }),
  new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
  new HtmlWebpackPlugin({
    template: 'client/index.html',
    inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
  }),
  new ExtractCssChunks({
    filename: '[name].css',
    chunkFilename: '[id].css',
  }),
  new webpack.DefinePlugin({
    'process.env.BUILD_TIME': `"${dayjs().format('DD-MM-YYYY-HH-mm')}"`,
  }),
];

module.exports = {
  target: 'web',

  mode: 'development',

  // Add hot reloading in development
  entry: [
    // 'babel-polyfill',
    // 'custom-event-polyfill',
    // 'es6-symbol/implement',
    // 'url-search-params-polyfill',
    // 'whatwg-fetch',
    'regenerator-runtime', // Load this first
    'core-js', // Load this second
    'react-hot-loader/patch', // This package already requires/loads react (but not react-dom). It must be loaded after babel-polyfill to ensure both react and react-dom use the same Symbol.
    'react', // Include this to enforce order
    'react-dom', // Include this to enforce order
    `webpack-hot-middleware/client?path=http://${host ||
      'localhost'}:${port}/__webpack_hmr`,
    'webpack/hot/only-dev-server',
    join(cwd, 'client/index.js'),
  ],

  module: webpackModule,

  resolve: {
    extensions: ['.js', '.cjs', '.mjs'],
  },

  // Don't use hashes in dev mode for better performance
  output: {
    filename: '[name].js',
    chunkFilename: '[name].chunk.js',
    publicPath: '/',
    path: resolve(cwd, 'app'),
  },

  // Add development plugins
  plugins,

  // Emit a source map for easier debugging
  devtool: 'source-map',

  performance: {
    hints: false,
  },

  optimization: {
    minimize: false,
  },
};
